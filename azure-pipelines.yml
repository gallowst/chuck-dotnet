trigger:
  branches:
    include:
    - main
  paths:
    exclude:
    - README.md

parameters:
  - name: slot
    displayName: Slot
    default: production
    values:
      - production
      - dev

variables:
- name: vmImageName
  value: 'windows-2019'
- name: workingDirectory
  value: '/'
- name: WebAppName
  value: 'app-aux-webapi-d-ne01'
- name: azureSubscription
  value: 'scon-aux-subscription-03'
- name: appName
  value: 'Chuck-Dotnet'
- name: ResourceGroupName
  value: 'rg-webapp-ap'
- name: buildArgs
  value: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(Build.ArtifactStagingDirectory)"'

pool:
  vmImage: $(vmImageName)

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    workspace:
      clean: all

    pool:
      vmImage: $(vmImageName)

    steps:

    - task: NuGetCommand@2
      inputs:
        command: 'restore'
        restoreSolution: '**\*.csproj'
        feedsToUse: 'config'
        noCache: false
    
    - task: VSBuild@1
      displayName: 'VSBuild: Chuck'
      inputs:
        solution: '**/chuck-dotnet.csproj'
        msbuildArgs: $(buildArgs)
        platform: 'AnyCPU'
        configuration: 'Release'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish: Build Artifacts'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)' 
        artifactName: drop

    - task: AzureRmWebAppDeployment@4
      displayName: 'Deploy WebApp: $(appName)'
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: $(azureSubscription)
        appType: 'webApp'
        WebAppName: $(WebAppName)
        ResourceGroupName: $(ResourceGroupName)
        deployToSlotOrASE: true
        SlotName: '${{ parameters.slot }}'
        package: '$(Build.ArtifactStagingDirectory)\**\chuck-dotnet.zip'
        enableXmlTransform: false